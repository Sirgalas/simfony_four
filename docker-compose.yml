version: '3.6'
services:
  nginx:
    build:
      context: docker/dev
      dockerfile: nginx.docker
    volumes:
      - ./app:/app
    depends_on:
      - php-fpm
    ports:
      - "8200:80"
    networks:
      - four
  php-fpm:
    build:
      context: docker/dev
      dockerfile: php-fpm.docker
    volumes:
      - ./app:/app
    depends_on:
      - db
      - mailer
      - redis
      - queue-redis
      - storage
      - centrifugo
    networks:
      - four
  php-cli:
    build:
      context: docker/dev
      dockerfile: php-cli.docker
    environment:
      XDEBUG_CONFIG: client_host=host.docker.internal client_port=9003 remote_enable=1
      PHP_IDE_CONFIG: "serverName=Docker"
    depends_on:
      - db
      - mailer
      - redis
      - queue-redis
      - storage
      - centrifugo
    volumes:
      - ./app:/app
      - composer:/root/.composer/cache
    networks:
      - four
  node:
    image: node:16.2-alpine
    volumes:
      - ./app:/app
    working_dir: /app
    networks:
      - four
  node-watch:
    image: node:11.13-alpine
    volumes:
      - ./app:/app
    working_dir: /app
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && npm run watch"
    networks:
      - four
  db:
    image: postgres:13.2-alpine
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: app
    ports:
      - "8201:5432"
    networks:
      - four
  mailer:
    image: mailhog/mailhog
    ports:
      - "8202:8025"
    networks:
      - four
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "8203:6379"
    volumes:
      - redis:/data
    command:
      - 'redis-server'
      - '--databases 2'
      - '--save 900 1'
      - '--save 300 10'
      - '--save 60 10000'
      - '--requirepass secret'
    networks:
      - four
  queue-worker:
    build:
      context: ./docker/dev
      dockerfile: php-cli.docker
    volumes:
      - ./app:/app
      - composer:/root/.composer/cache
    depends_on:
      - db
      - redis
      - queue-redis
      - storage
      - mailer
      - centrifugo
    networks:
      - four
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && php bin/console messenger:consume async -vv"
  queue-redis:
    image: redis:5.0-alpine
    volumes:
      - queue-redis:/data
    networks:
          - four
  storage:
    build:
      context: ./storage/docker/development
      dockerfile: nginx.docker
    volumes:
      - ./storage:/app
    ports:
      - "8204:80"
    networks:
      - four
  storage-ftp:
    image: stilliard/pure-ftpd
    environment:
      FTP_USER_NAME: app
      FTP_USER_PASS: secret
      FTP_USER_HOME: /app
    volumes:
      - ./storage/public:/app
    networks:
      - four
  centrifugo:
    image: centrifugo/centrifugo:v2.8
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    environment:
      CENTRIFUGO_SECRET: secret
      CENTRIFUGO_API_KEY: secret
    volumes:
      - ./centrifugo/docker/development/centrifugo:/centrifugo
    ports:
      - "8205:8000"
    command: centrifugo --admin --admin_insecure
    networks:
      - four

volumes:
  db:
  composer:
  redis:
  queue-redis:

networks:
  four:
    driver: bridge
